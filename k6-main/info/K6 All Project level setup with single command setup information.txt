Here's a complete setup that lets us:

✅ Run a K6 load test
✅ Automatically check if any thresholds failed
✅ Generate an Excel report with metrics, generate charts using the results
✅ Print alerts and sends email on sucessful completion of execution and failure of thresholds with results and logs attached
✅ Run it all with one command

✅ Step-by-Step Setup: 
OPTIONAL:
We need Chocolatey because:
-- It's a tool installer for Windows
-- It helps you install dependencies like k6 quickly
-- It makes your automation setup portable and scriptable
-- It saves you from manual downloads and setup headaches

Steps to install Chocolatey which is a prereq: 
1. Open PowerShell as an Administrator:
Right-click the Windows Start button and select "Windows PowerShell (Admin)" or "PowerShell" and then "Run as administrator". 
2. Find the Installation Command:
Go to the Chocolatey website or the Chocolatey installation page: 'https://chocolatey.org/install' and find the installation command specific to your environment. 
3. Copy and Paste the Command:
Copy the command from the website and paste it into the PowerShell window. : Set-ExecutionPolicy Bypass -Scope Process -Force; [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072; iwr https://community.chocolatey.org/install.ps1 -UseBasicParsing | iex
4. Execute the Command:
Press Enter. The installation script will download and install Chocolatey on your system. 
5. Verify Installation:
Type choco -v in PowerShell to check the installed version. If you see the version, Chocolatey is installed successfully. 

OR From cmd run following command : 
        @"%SystemRoot%\System32\WindowsPowerShell\v1.0\powershell.exe" -NoProfile -InputFormat None -ExecutionPolicy Bypass -Command "[System.Net.ServicePointManager]::SecurityProtocol = 3072; iex ((New-Object System.Net.WebClient).DownloadString('https://community.chocolatey.org/install.ps1'))" && SET "PATH=%PATH%;%ALLUSERSPROFILE%\chocolatey\bin"```

Prereq : Chocolatey should be installed in windows to use following command: 
	choco install k6

OR


Using powershell we can install K6: 
Grafana K6 install steps : 
	winget install k6 --source winget

Create a folder contining js file with code for api volume testing
C:\Mayur\k6

Setup path of installed .exe of k6 in environment variables path

Run the file by opening cmd prompt from the location where file is present : 
Location of cmd : C:\Windows\System32\cmd.exe
	k6 run project2Chat.js

Run the command to get result in txt format: 
	k6 run project2Chat.js > resultLive.txt

Run the command to get result in excel csv format: 
	k6 run project2Chat.js > resultLive.csv

To login in cloud : 
	k6 cloud login 
	-Enter the token or email and password

 Run the command to run code locally but get results in cloud : 
k6 run --out cloud project2Chat.js

Run the command to run code locally but get results in prometheus :  
# If the custom binary is in your current directory
k6 run --out prometheus-remote=http://localhost:9090/api/v1/write test.js

Run the command to generate html report locally in k6: 
set K6_WEB_DASHBOARD=true&& set K6_WEB_DASHBOARD_EXPORT=reports\html-report.html&& k6 run tests\project3Ai.js  

To directly use this project in your machine : 
1. Initialize Your Project
In your terminal:  // This creates a package.json.
	npm init -y

2. Install Required Packages
You need these 5:
	npm install dotenv nodemailer exceljs chart.js chartjs-node-canvas

3. run whole suite from terminal command in k6 folder location : 
	node run-async-k6.js


📁 Project Structure

project/
├── tests/
│   ├── test-login.js
│   ├── test-payment.js
├── run-async-k6.js
├── config.js
├── generate-report.js       
├── alert-email.js
├── reports/
│   └── test-login/
│       ├── result.json
│       ├── k6_log.txt
│       ├── report.xlsx
│       └── charts/
│           ├── response_time.png
│           └── requests_per_second.png
