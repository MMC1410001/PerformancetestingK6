Challenges: 
1) K6 does not have charts as output support in built. We either need to use grafana cloud or create the chart generation code by ourselves.
2) Performance metrics or benchmarks required for performance testing were not available. Discussed with Dev and product team to understand user load expected.
3) Email integration was failing. Had to learn about SMTP server. Port was used causing default in build gmail mail support to fail. Email with 2FA enabled cannot be used directly and had to enable app password. App password got deleted automatically when enabling 2FA on gmail account.
4) No test email or mobile number is given so that QA won't have to use personal email or mobile number to allow email creation.
5) Default output of K6 in .txt and .csv format conatins output with gibberish characters. Hence, had to create custom script to create results excel from .json output of result.
6) Had to handle timeouts customly in test.js files to get correct test duration and response. An example of such was stream api fetch call where when call is made it in background actually is a listener which waits till multiple processes are done in background by system and output is received. 
7) In chatbot and OTP generation performance testing,rate limit was present which QA was unaware of causing tests to fail and putting a hold on testing till issue was resolved. The limit was so low dev had to discuss with service provider and change the service provider entirely.
8) Chatbot uses chatgpt in background which has token limit, hence after around every 60 questions performance test used to fail due to no response. 
9) Chatbot uses chatgpt in background which has token limit, hence when Run multiple times testcase exhausted the credits of chatbot limiting usage of actual users on production environment.
10) There was a api call where user uploads a form 16, which is uploaded on the system which parses and returns response in json format of the uploaded form 16 details as api call response. Had to learn and implement how to simulate file upload in api call and validate results are same as file uploaded.
11) When uploading form 16 for tax calculation , in background actually 2 calls are made -> a) Which uploads file to system and parses data and returns in json format, then b) Json data is sent to 1Finance api which actually returns the tax amount payable. Using response from one api call and sending as data to another api call,api chaining was implemented there.  
12) When validating OTP generation , OTP generation is handled for randomly generated mobile numbers, but OTP verification is not yet implemented as OTP creation logic is not with team and is provided by third party service provider. Im thinking of using 3rd party services which provides different mobile numbers and OTP as api call if we can implement that in our code.
13) K6 just provides raw metrics but as per our threshold benchmark, we should understand final result as pass fail. Custom thresholds such as success rate, failure rate in result were added which can be checked by logs.
14) Chatbot requires logged in user to provide answers with context, which was preventing us from testing. Used cookies of session to handle logging in action. Another alternative was making user log in from UI using playwright, but it would be slow and also OTP validation logic would be needed to be implemented.
15) Deleting any conversation from api call : Chatbot stores every coversation with a unique ID . This logic of creating the unique id was not present with me, neither do we have DB access. Hence currently we have to find the ID manually from UI using network tab of browser. Once we have DB access or actual logic shared by dev we can make it completely automatic.
16) Renaming any specific conversation from API call : Chatbot stores every coversation with a unique ID . This logic of creating the unique id was not present with me, neither do we have DB access. Hence currently we are fetching the unique ID of first conversation and renaming it. Once we have DB access or actual logic shared by dev we can make it such that we are able to target any specific conversation to be renamed.
17) Currently the script is written that we give static number of users and duration, further research is needed to implement logic such that either duration or users will keep on increasing till application crashes from code itself.

